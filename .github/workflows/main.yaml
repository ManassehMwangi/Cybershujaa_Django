name: DjangonvApp                                  # workflow name

on:
  push:
    branches:                                 
      - main
env:
  AZURE_WEBAPP_NAME: my-web-app # set this to your application's name
  AZURE_WEBAPP_PACKAGE_PATH: './src' # set this to the path to your web app project, defaults to the repository root

jobs:
  build:
    runs-on: ubuntu-latest                    
    steps:
      - uses: actions/checkout@v2

      - name: Setup python
        uses: actions/setup-python@v2
        with:
          python-version: '3.7'

      - run: |
          pip3 install --upgrade virtualenv
          virtualenv env
          source env/bin/activate
          pip install -r requirements.txt
          python manage.py check

  test:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - uses: actions/checkout@v2

      - name: Setup python
        uses: actions/setup-python@v2
        with:
          python-version: '3.7'

      - run: |
          pip3 install --upgrade virtualenv
          virtualenv env
          source env/bin/activate
          pip install -r requirements.txt
          python manage.py test taskManager

  sca-safety:
    runs-on: ubuntu-latest
    needs: test
    steps:
      - uses: actions/checkout@v2
      
      - run: docker run --rm -v $(pwd):/src hysnsec/safety check -r requirements.txt --json | tee sca-safety.json
        continue-on-error: true             # allow the build to fail
        
      - uses: actions/upload-artifact@v2
        with:
          name: Safety
          path: sca-safety.json
        if: always()        

  odc-owaspdependency:
    runs-on: ubuntu-latest
    name: depecheck_test
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Depcheck
        uses: dependency-check/Dependency-Check_Action@main
        id: Depcheck
        with:
          project: 'dangonv'
          path: '.'
          format: 'CSV'
          others: ''

      - name: Upload Test results
        uses: actions/upload-artifact@master
        with:
           name: Depcheck report
           path: ${{github.workspace}}/reports

  sca-frontend:
    runs-on: ubuntu-latest
    needs: odc-owaspdependency
    steps:
      - uses: actions/checkout@v2

      - uses: actions/setup-node@v2
        with:
          node-version: '10.x'
          
      - run: npm install         
       
      - run: npm install
      
      - run: docker run --rm -v $(pwd):/src -w /src gruebel/retirejs:latest --outputformat json --outputpath retirejs-report.json --severity high
        continue-on-error: true

      - uses: actions/upload-artifact@v2
        with:
          name: RetireJS
          path: retirejs-report.json
        if: always()  

  sast:
    runs-on: ubuntu-latest
    needs: sca-frontend
    steps:
      - uses: actions/checkout@v2

      - run: docker run --rm -v $(pwd):/src cytopia/bandit -r /src -f json -o /src/bandit-output.json
        continue-on-error: true             # allow the build to fail

      - uses: actions/upload-artifact@v2
        with:
          name: Bandit
          path: bandit-output.json
        if: always()                        

  sbom:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3
    - name: Setup .NET
      uses: actions/setup-dotnet@v2
      with:
        dotnet-version: 6.0.x

    - name: Build
      run: dotnet build Sample.sln --output buildOutput
      continue-on-error: true             # allow the build to fail

    - name: Upload a Build Artifact
      uses: actions/upload-artifact@v3.1.0
      with:
        path: buildOutput

  integration:
    runs-on: ubuntu-latest
    needs: sca-frontend
    steps:
      - run: echo "This is an integration step"
      - run: exit 1
        continue-on-error: true

  prod:
    runs-on: ubuntu-latest
    needs: integration
    steps:
      - run: echo "This is a deploy step."
